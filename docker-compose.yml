version: '3'

services:
  orders-service:
    image: versta-orders-service:local
    container_name: versta-orders-service
    depends_on:
      goose-orders:
        condition: service_completed_successfully
    environment:
      HTTP_PORT: 8000
      LOG_LEVEL: DEBUG
      AUTH_SERVICE_HOST: http://auth-service:8001
      EMAIL_SERVICE_HOST: http://email-service:8002
      ORDERS_CRYPTO_KEY: ${ORDERS_CRYPTO_KEY}
      DB_HOST: postgres-orders
      DB_PORT: 5003
      DB_USERNAME: postgres
      DB_NAME: orders-db
      DB_PASSWORD: ${ORDERS_DB_PASSWORD}
      JWT_SIGNATURE_KEY: ${JWT_SIGNATURE_KEY}
      ACCESS_TOKEN_TTL_MS: 900000 #15 minute
      REFRESH_TOKEN_TTL_MS: 43200000 #12 hours

    ports:
      - "8000:8000"
    volumes:
      - ./orders-service/logs:/go/logs

  auth-service:
    image: versta-auth-service:local
    container_name: versta-auth-service
    depends_on:
      goose-auth:
        condition: service_completed_successfully
    environment:
      HTTP_PORT: 8001
      LOG_LEVEL: DEBUG
      EMAIL_SERVICE_HOST: http://email-service:8002
      AUTH_CRYPTO_KEY: ${AUTH_CRYPTO_KEY}
      DB_HOST: postgres-auth
      DB_PORT: 5004
      DB_USERNAME: postgres
      DB_NAME: auth-db
      DB_PASSWORD: ${AUTH_DB_PASSWORD}
      ADMIN_EMAIL: ${EMAIL_SENDER}
      ACCESS_TOKEN_TTL_MS: 900000 #15 minute
      REFRESH_TOKEN_TTL_MS: 43200000 #12 hours
      JWT_SIGNATURE_KEY: ${JWT_SIGNATURE_KEY}
    ports:
      - "8001:8001"
    volumes:
      - ./auth-service/logs:/go/logs

  chat-service:
    image: versta-chat-service:local
    container_name: versta-chat-service
    depends_on:
      goose-chat:
        condition: service_completed_successfully
    environment:
      HTTP_PORT: 8003
      LOG_LEVEL: DEBUG
      CHAT_CRYPTO_KEY: ${CHAT_CRYPTO_KEY}
      DB_HOST: postgres-chat
      DB_PORT: 5005
      DB_USERNAME: postgres
      DB_NAME: chat-db
      DB_PASSWORD: ${CHAT_DB_PASSWORD}
      JWT_SIGNATURE_KEY: ${JWT_SIGNATURE_KEY}
      ACCESS_TOKEN_TTL_MS: 900000 #15 minute
      REFRESH_TOKEN_TTL_MS: 43200000 #12 hours
    ports:
      - "8003:8003"
    volumes:
      - ./chat-service/logs:/go/logs

  email-service:
    image: versta-email-service:local
    container_name: versta-email-service
    environment:
      HTTP_PORT: 8002
      LOG_LEVEL: PRODUCTION
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_SENDER: ${EMAIL_SENDER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    ports:
      - "8002:8002"
    volumes:
      - ./email-service/logs:/go/logs

  page-parser:
    image: versta-page-parser:local
    container_name: versta-page-parser
    depends_on:
      - orders-service
    environment:
      HTTP_PORT: 80
      LOG_LEVEL: PRODUCTION
      ORDERS_SERVICE_HOST: http://orders-service:8000
    ports:
      - "80:80"
    volumes:
      - ./landing-page-parser/logs:/go/logs

  postgres-orders:
    image: postgres:14-alpine
    container_name: versta-orders-db
    ports:
      - "5003:5003"
    expose:
      - "5003"
    command: -p 5003
    environment:
      - POSTGRES_DB=orders-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${ORDERS_DB_PASSWORD}
    volumes:
      - ./orders-service/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5003" ]
      interval: 5s
      timeout: 10s
      retries: 5

  goose-orders:
    image: artsafin/goose-migrations:latest
    depends_on:
      postgres-orders:
        condition: service_healthy
    volumes:
      - ./orders-service/db/migrations:/db/migrations
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "postgres://postgres:${ORDERS_DB_PASSWORD}@postgres-orders:5003/orders-db?sslmode=disable"
    command: [ "-dir", "/db/migrations", "up" ]

  postgres-auth:
    image: postgres:14-alpine
    container_name: versta-auth-db
    ports:
      - "5004:5004"
    expose:
      - "5004"
    command: -p 5004
    environment:
      - POSTGRES_DB=auth-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
    volumes:
      - ./auth-service/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5004" ]
      interval: 5s
      timeout: 10s
      retries: 5

  goose-auth:
    image: artsafin/goose-migrations:latest
    depends_on:
      postgres-auth:
        condition: service_healthy
    volumes:
      - ./auth-service/db/migrations:/db/migrations
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "postgres://postgres:${AUTH_DB_PASSWORD}@postgres-auth:5004/auth-db?sslmode=disable"
    command: [ "-dir", "/db/migrations", "up" ]

  postgres-chat:
    image: postgres:14-alpine
    container_name: versta-chat-db
    ports:
      - "5005:5005"
    expose:
      - "5005"
    command: -p 5005
    environment:
      - POSTGRES_DB=chat-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${CHAT_DB_PASSWORD}
    volumes:
      - ./chat-service/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5005" ]
      interval: 5s
      timeout: 10s
      retries: 5

  goose-chat:
    image: artsafin/goose-migrations:latest
    depends_on:
      postgres-chat:
        condition: service_healthy
    volumes:
      - ./chat-service/db/migrations:/db/migrations
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "postgres://postgres:${CHAT_DB_PASSWORD}@postgres-chat:5005/chat-db?sslmode=disable"
    command: [ "-dir", "/db/migrations", "up" ]
